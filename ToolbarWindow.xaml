<Window
    x:Class="Rooler.ToolbarWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    x:Name="WindowApp"
    Title="Rooler"
    Background="Transparent"
    Foreground="#FFFFFFFF"
    SnapsToDevicePixels="True"
    WindowStyle="None"
    mc:Ignorable="d"
    SizeToContent="WidthAndHeight"
    AllowsTransparency="True"
    ResizeMode="NoResize">
    <!--  Background='#00FFFFFF'  -->

    <Window.Resources>
        <LinearGradientBrush x:Key="MouseOverBackground" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Offset="0.504" Color="#FF797979" />
            <GradientStop Offset="0.46" Color="#FF9B9B9B" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Redline" Color="#FFE40000" />
        <LinearGradientBrush x:Key="ExpanderArrowHoverFill" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFF0F8FE" />
            <GradientStop Offset="0.3" Color="#FFE0F3FE" />
            <GradientStop Offset="1" Color="#FF6FA7C5" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ExpanderArrowPressedFill" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFDCF0FA" />
            <GradientStop Offset="0.2" Color="#FFC5E6F7" />
            <GradientStop Offset="1" Color="#FF5690D0" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ExpanderArrowFill" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="White" />
            <GradientStop Offset="0.5" Color="#FFBFBFBF" />
            <GradientStop Offset="1" Color="#FF878787" />
        </LinearGradientBrush>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse
                                        x:Name="circle"
                                        Width="19"
                                        Height="19"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="{DynamicResource ExpanderArrowFill}"
                                        Stroke="DarkGray" />
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="#666"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Grid.Row="1"
                                    Margin="0,4,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                                <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderArrowHoverFill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderArrowPressedFill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse
                                        x:Name="circle"
                                        Width="19"
                                        Height="19"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="{DynamicResource ExpanderArrowFill}"
                                        Stroke="DarkGray" />
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="#666"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                                <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderArrowHoverFill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderArrowPressedFill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse
                                        x:Name="circle"
                                        Width="19"
                                        Height="19"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="{DynamicResource ExpanderArrowFill}"
                                        Stroke="DarkGray" />
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="#666"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Grid.Row="1"
                                    Margin="0,4,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                                <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderArrowHoverFill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderArrowPressedFill}" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle
                                Margin="0"
                                SnapsToDevicePixels="true"
                                Stroke="Black"
                                StrokeDashArray="1 2"
                                StrokeThickness="1" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="#00000000"
                                    Stroke="{DynamicResource ButtonBackground}" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="#666"
                                    StrokeThickness="2" />
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Fill" Value="#90707070" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="circle" Property="Fill" Value="#90707070" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PrefsExpander" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton
                                    x:Name="HeaderSite"
                                    MinWidth="0"
                                    MinHeight="0"
                                    Margin="1"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalAlignment="Right"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    DockPanel.Dock="Top"
                                    FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontStretch="{TemplateBinding FontStretch}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ExpanderDownHeaderStyle}">
                                    <ToggleButton.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0" Color="#FFF3F3F3" />
                                            <GradientStop Offset="0.5" Color="#FFEBEBEB" />
                                            <GradientStop Offset="0.5" Color="#FFDDDDDD" />
                                            <GradientStop Offset="1" Color="#00CDCDCD" />
                                        </LinearGradientBrush>
                                    </ToggleButton.Background>
                                </ToggleButton>
                                <ContentPresenter
                                    x:Name="ExpandSite"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    DockPanel.Dock="Bottom"
                                    Focusable="false"
                                    Visibility="Collapsed" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted" StartPoint="0,1" EndPoint="0,0">
            <GradientStop Offset="0" Color="white" />
            <GradientStop Offset="0.5" Color="#B8E2F9" />
            <GradientStop Offset="1" Color="#B0DFF8" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder" Color="#3C7FB1" />
        <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted" StartPoint="0,1" EndPoint="0,0">
            <GradientStop Offset="0.25" Color="#B8E4FA" />
            <GradientStop Offset="0.5" Color="#5EB4E3" />
            <GradientStop Offset="1" Color="#4C8BB4" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder" Color="#2C628B" />
        <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z</Geometry>
        <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
        <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted" StartPoint="0,1" EndPoint="0,0">
            <GradientStop Offset="0" Color="White" />
            <GradientStop Offset="0.4" Color="#F0EFEF" />
            <GradientStop Offset=".8" Color="#D6D5D5" />
        </LinearGradientBrush>
        <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
        <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z</Geometry>
        <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Height" Value="18" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="180" />
                                            <TranslateTransform X="5" Y="9" />
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path
                                x:Name="Background"
                                Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"
                                Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted}" />
                            <Path
                                x:Name="InnerBorder"
                                Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"
                                Stroke="White"
                                StrokeThickness="1" />
                            <Path
                                x:Name="OuterBorder"
                                Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"
                                Stroke="#FF929292"
                                StrokeThickness="1" />
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Background" Property="Fill" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}" />
                                <Setter TargetName="OuterBorder" Property="Stroke" Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter TargetName="Background" Property="Fill" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}" />
                                <Setter TargetName="OuterBorder" Property="Stroke" Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter TargetName="Background" Property="Fill" Value="{StaticResource HorizontalSliderThumbPressedBackgroundInverted}" />
                                <Setter TargetName="OuterBorder" Property="Stroke" Value="{StaticResource HorizontalSliderThumbPressedBorder}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Background" Property="Fill" Value="#FFF4F4F4" />
                                <Setter TargetName="InnerBorder" Property="Stroke" Value="{x:Null}" />
                                <Setter TargetName="OuterBorder" Property="Data" Value="{StaticResource SliderThumbDisabledGeometry}" />
                                <Setter TargetName="OuterBorder" Property="Stroke" Value="#FFAEB1AF" />
                                <Setter TargetName="OuterBorder" Property="Data" Value="{StaticResource SliderPointedThumbDisabledGeometry}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="white" />
            <GradientStop Offset="0.5" Color="#B8E2F9" />
            <GradientStop Offset="1" Color="#B0DFF8" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.25" Color="#B8E4FA" />
            <GradientStop Offset="0.5" Color="#5EB4E3" />
            <GradientStop Offset="1" Color="#4C8BB4" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="White" />
            <GradientStop Offset="0.4" Color="#F0EFEF" />
            <GradientStop Offset=".8" Color="#D6D5D5" />
        </LinearGradientBrush>
        <Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Height" Value="18" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="5" Y="9" />
                            </Canvas.RenderTransform>
                            <Path
                                x:Name="Background"
                                Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"
                                Fill="{StaticResource HorizontalSliderThumbNormalBackground}" />
                            <Path
                                x:Name="InnerBorder"
                                Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"
                                Stroke="White"
                                StrokeThickness="1" />
                            <Path
                                x:Name="OuterBorder"
                                Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"
                                Stroke="#FF929292"
                                StrokeThickness="1" />
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Background" Property="Fill" Value="{StaticResource HorizontalSliderThumbHoverBackground}" />
                                <Setter TargetName="OuterBorder" Property="Stroke" Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter TargetName="Background" Property="Fill" Value="{StaticResource HorizontalSliderThumbHoverBackground}" />
                                <Setter TargetName="OuterBorder" Property="Stroke" Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter TargetName="Background" Property="Fill" Value="{StaticResource HorizontalSliderThumbPressedBackground}" />
                                <Setter TargetName="OuterBorder" Property="Stroke" Value="{StaticResource HorizontalSliderThumbPressedBorder}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Background" Property="Fill" Value="#FFF4F4F4" />
                                <Setter TargetName="InnerBorder" Property="Stroke" Value="{x:Null}" />
                                <Setter TargetName="OuterBorder" Property="Data" Value="{StaticResource SliderThumbDisabledGeometry}" />
                                <Setter TargetName="OuterBorder" Property="Stroke" Value="#FFAEB1AF" />
                                <Setter TargetName="OuterBorder" Property="Data" Value="{StaticResource SliderPointedThumbDisabledGeometry}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA" />
        <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.1" Color="#FFAEB1AF" />
            <GradientStop Offset=".9" Color="White" />
        </LinearGradientBrush>
        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z</Geometry>
        <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>
        <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Width" Value="11" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="5.5" Y="11" />
                            </Canvas.RenderTransform>
                            <Path
                                Canvas.Left="-2.5"
                                Canvas.Top="-8.5"
                                Width="7"
                                Height="7"
                                Data="M-2.5,-8.5 L3.5,-8.5 0.5,-2.5 z"
                                Fill="#FFA9A9A9"
                                Stretch="Fill"
                                Stroke="#FFA9A9A9" />
                            <Rectangle
                                Canvas.Left="-3"
                                Canvas.Top="-10"
                                Width="8"
                                Height="21"
                                Fill="#00FFFFFF" />
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true" />
                            <Trigger Property="Foreground" Value="Blue" />
                            <Trigger Property="IsDragging" Value="true" />
                            <Trigger Property="IsEnabled" Value="false" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="SimpleSlider" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#FFC4C4C4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TickBar
                                    x:Name="TopTick"
                                    Grid.Row="0"
                                    Height="4"
                                    Fill="{TemplateBinding Foreground}"
                                    Placement="Top"
                                    Visibility="Collapsed" />
                                <TickBar
                                    x:Name="BottomTick"
                                    Grid.Row="2"
                                    Height="4"
                                    Fill="{TemplateBinding Foreground}"
                                    Placement="Bottom"
                                    Visibility="Collapsed" />
                                <Border
                                    x:Name="TrackBackground"
                                    Grid.Row="1"
                                    Height="2"
                                    Margin="5,0"
                                    VerticalAlignment="center"
                                    Background="#FFA9A9A9"
                                    CornerRadius="1">
                                    <Canvas Margin="-6,-1">
                                        <Rectangle
                                            x:Name="PART_SelectionRange"
                                            Height="4.0"
                                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                            Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                            StrokeThickness="1.0"
                                            Visibility="Hidden" />
                                    </Canvas>
                                </Border>
                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4" />
        <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F" />


        <Style x:Key="SimpleCheckbox" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}" />
            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Microsoft_Windows_Themes:BulletChrome
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                IsChecked="{TemplateBinding IsChecked}"
                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                RenderPressed="{TemplateBinding IsPressed}" />
                            <ContentPresenter
                                Margin="0,0,23,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="Padding" Value="4,0,0,0" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MagnifyButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border
                                x:Name="border"
                                Background="#004F4F4F"
                                BorderThickness="1,1,1,1"
                                CornerRadius="2,2,2,2" />
                            <Viewbox
                                x:Name="viewbox"
                                Margin="2,2,2,2"
                                Stretch="Fill"
                                d:LayoutOverrides="Width, Height">
                                <Canvas
                                    Width="26"
                                    Height="28"
                                    Background="#00000000">
                                    <Rectangle
                                        Canvas.Left="15.557"
                                        Canvas.Top="15"
                                        Width="7"
                                        Height="13"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stroke="#FF1A1A1A">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="1,0">
                                                <GradientStop Offset="0.017" Color="#FF4B4B4B" />
                                                <GradientStop Offset="1" Color="#FF797979" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="-36.407" />
                                                <TranslateTransform X="0" Y="0" />
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Ellipse
                                        Width="20"
                                        Height="20"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Fill="#FFB1B1B1"
                                        Stroke="#FF000000" />
                                    <Ellipse
                                        x:Name="ellipse"
                                        Canvas.Left="2"
                                        Canvas.Top="2"
                                        Width="16"
                                        Height="16"
                                        Margin="0,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Fill="#FF404040"
                                        Stroke="#FF000000" />
                                    <Path
                                        Canvas.Left="3.345"
                                        Canvas.Top="4.523"
                                        Width="10.623"
                                        Height="3.916"
                                        Margin="0,0,0,0"
                                        VerticalAlignment="Stretch"
                                        Data="M11.165963,3.407334 C11.165963,4.5119035 7.7614237,2 5,2 2.2385763,2 0.5430796,2.7359648 0.5430796,1.6313953 0.5430796,0.52682581 2.4229388,-0.22849379 5.1843626,-0.22849379 7.9457863,-0.22849379 11.165963,2.3027645 11.165963,3.407334 z"
                                        Fill="#FF646464"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Fill">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="-31.293" />
                                                <TranslateTransform X="-0.06713172318980476" Y="-0.15568762047436291" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Canvas>
                            </Viewbox>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="ellipse" Property="Fill" Value="#FF294172" />
                                <Setter TargetName="viewbox" Property="Margin" Value="2,2,2,2" />
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverBackground}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="ellipse" Property="Fill" Value="#FF294172" />
                                <Setter TargetName="viewbox" Property="Margin" Value="2,2,2,2" />
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverBackground}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="Black"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#F3F3F3" />
            <GradientStop Offset="0.5" Color="#EBEBEB" />
            <GradientStop Offset="0.5" Color="#DDDDDD" />
            <GradientStop Offset="1" Color="#CDCDCD" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />
        <Style x:Key="CameraButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid1">
                            <Border
                                x:Name="border"
                                VerticalAlignment="Bottom"
                                CornerRadius="3,3,3,3">
                                <Grid
                                    x:Name="grid"
                                    Height="18"
                                    Margin="1,3,1,4">
                                    <Rectangle Margin="0,3,0,0">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="0.349" Color="#FF373737" />
                                                <GradientStop Offset="1" Color="#FF2A2A2A" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                        <Rectangle.Stroke>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="0" Color="#89515151" />
                                                <GradientStop Offset="1" Color="#FF212121" />
                                            </LinearGradientBrush>
                                        </Rectangle.Stroke>
                                    </Rectangle>
                                    <Rectangle
                                        Height="3"
                                        Margin="1,4,1,0"
                                        VerticalAlignment="Top"
                                        Fill="#FF454545" />
                                    <Ellipse
                                        Margin="2,5,10,2"
                                        Fill="#FF313131"
                                        Stroke="#FF000000" />
                                    <Path
                                        Width="6.378"
                                        Margin="3.461,6.962,0,8.788"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Stretch"
                                        Data="M6.354,1.862 C6.2537902,2.2700513 4.9673696,1.5490601 3.212761,1.5490601 1.4581523,1.5490601 0,2.8903542 0,1.862 0,0.8336458 1.4223913,0 3.177,0 4.9316087,0 6.5992572,0.86332023 6.354,1.862 z"
                                        Fill="#FF646464"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Fill">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="-22.951" />
                                                <TranslateTransform X="-0.28833848666831496" Y="0.053662571794968361" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Rectangle
                                        Width="4"
                                        Height="3"
                                        Margin="0,0,3,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Fill="#FF525252" />
                                    <Ellipse
                                        Width="3"
                                        Height="3"
                                        Margin="0,5,3,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Fill="#FFC50000" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverBackground}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="ToggleButton.IsChecked" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!--  todo: put button resources properly  -->
    <Grid x:Name="LayoutRoot" Background="Transparent">
        <Border
            x:Name="Toolbar"
            CornerRadius="8"
            Background="{DynamicResource ToolBarBackground}"
            Height="44">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border>
                    <StackPanel
                            x:Name="Toggles"
                            Margin="12,0,0,0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                        <Image Width="16" Height="16">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <DrawingGroup ClipGeometry="M0,0 V16 H8 V0 H0 Z">
                                            <GeometryDrawing Brush="#FF909090">
                                                <GeometryDrawing.Geometry>
                                                    <EllipseGeometry
                                                            Center="1.0435,1.0435"
                                                            RadiusX="1.0435"
                                                            RadiusY="1.0435" />
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="#FF909090">
                                                <GeometryDrawing.Geometry>
                                                    <EllipseGeometry
                                                            Center="6.6087,1.0435"
                                                            RadiusX="1.0435"
                                                            RadiusY="1.0435" />
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="#FF909090">
                                                <GeometryDrawing.Geometry>
                                                    <EllipseGeometry
                                                            Center="1.0435,8"
                                                            RadiusX="1.0435"
                                                            RadiusY="1.0435" />
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="#FF909090">
                                                <GeometryDrawing.Geometry>
                                                    <EllipseGeometry
                                                            Center="6.6087,8"
                                                            RadiusX="1.0435"
                                                            RadiusY="1.0435" />
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="#FF909090">
                                                <GeometryDrawing.Geometry>
                                                    <EllipseGeometry
                                                            Center="1.0435,14.9563"
                                                            RadiusX="1.0435"
                                                            RadiusY="1.0435" />
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="#FF909090">
                                                <GeometryDrawing.Geometry>
                                                    <EllipseGeometry
                                                            Center="6.6087,14.9563"
                                                            RadiusX="1.0435"
                                                            RadiusY="1.0435" />
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                        </DrawingGroup>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>

                        <Button
                                Margin="12,0,0,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Click="CollapseClick"
                                ToolTip="Find the bounds of a screen visual">
                            <Button.Resources>
                                <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />
                                <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{DynamicResource ButtonPointerOverBackground}" />
                                <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />
                                <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}" />
                            </Button.Resources>
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE76B;" x:Name="CollapseIcon" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <StackPanel x:Name="CollapsableRegion" Orientation="Horizontal">
                            <Button
                                Margin="12,0,8,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Click="RequestClickThrough"
                                ToolTip="Find the bounds of a screen visual">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{DynamicResource ButtonPointerOverBackground}" />
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}" />
                                </Button.Resources>
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE962;" />
                                        <TextBlock Margin="6,4,4,4" VerticalAlignment="Center">Click Through</TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button
                                Margin="12,0,8,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Click="StartBounds"
                                ToolTip="Find the bounds of a screen visual">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{DynamicResource ButtonPointerOverBackground}" />
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}" />
                                </Button.Resources>
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEF20;" />
                                        <TextBlock Margin="6,4,4,4" VerticalAlignment="Center">Bound</TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button
                                Margin="8,0,8,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Click="StartStretch"
                                ToolTip="Find the spacing between two screen visuals">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{DynamicResource ButtonPointerOverBackground}" />
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}" />
                                </Button.Resources>
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE710;" />
                                        <TextBlock Margin="6,4,4,4" VerticalAlignment="Center">Spacing</TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button
                                Margin="8,0,8,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Click="StartStretchEW"
                                ToolTip="Find the spacing between two screen visuals horizontally">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{DynamicResource ButtonPointerOverBackground}" />
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}" />
                                </Button.Resources>
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE76F;" />
                                        <TextBlock Margin="6,4,4,4" VerticalAlignment="Center">Horizontal</TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button
                                Margin="8,0,8,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Click="StartStretchNS"
                                ToolTip="Find the spacing between two screen visuals vertically">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{DynamicResource ButtonPointerOverBackground}" />
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}" />
                                </Button.Resources>
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE784;" />
                                        <TextBlock Margin="6,4,4,4" VerticalAlignment="Center">Vertical</TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button
                                x:Name="CaptureButton"
                                Margin="8,0,8,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Click="StartCapture"
                                ToolTip="Capture"
                                Visibility="Collapsed">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{DynamicResource ButtonPointerOverBackground}" />
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}" />
                                </Button.Resources>
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE722;" />
                                        <TextBlock Margin="6,4,4,4" VerticalAlignment="Center">Capture</TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button
                                x:Name="Magnify"
                                Margin="8,0,8,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Click="StartMagnify"
                                ToolTip="Magnify">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{DynamicResource ButtonPointerOverBackground}" />
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}" />
                                </Button.Resources>
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8A3;" />
                                        <TextBlock Margin="6,4,4,4" VerticalAlignment="Center">Magnify</TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button
                                x:Name="SettingsButton"
                                Margin="8,0,8,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Click="OpenSettings"
                                ToolTip="Launch settings">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{DynamicResource ButtonPointerOverBackground}" />
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}" />
                                </Button.Resources>
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE713;" />
                                        <TextBlock Margin="6,4,4,4" VerticalAlignment="Center">Settings</TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                        <ui:AppBarSeparator BorderThickness="6" VerticalAlignment="Center" />
                        <Border CornerRadius="8">
                            <ui:AppBarButton
                                    Width="44"
                                    Height="44"
                                    Margin="0,0,0,0"
                                    VerticalAlignment="Center"
                                    Background="Transparent"
                                    CornerRadius="8"
                                    Click="Close"
                                    ToolTip="Close">
                                <ui:AppBarButton.Resources>
                                    <SolidColorBrush x:Key="AppBarButtonBackgroundDisabled" Color="Transparent" />
                                    <SolidColorBrush x:Key="AppBarButtonBackgroundPointerOver" Color="Red" />
                                    <SolidColorBrush x:Key="AppBarButtonForegroundPointerOver" Color="White" />
                                    <SolidColorBrush x:Key="AppBarButtonBackgroundPressed" Color="DarkRed" />
                                </ui:AppBarButton.Resources>
                                <ui:AppBarButton.Icon>
                                    <ui:FontIcon
                                            Margin="0,4,0,0"
                                            FontFamily="Segoe MDL2 Assets"
                                            Glyph="&#xE711;" />
                                </ui:AppBarButton.Icon>
                            </ui:AppBarButton>
                        </Border>
                        <!--	<Button VerticalAlignment="Center"x:Name='Bounds' Margin="0,0,4,0" Click='StartBounds' ToolTip="Find the bounds of a screen visual">
						<Grid>
							<Rectangle Stroke="{DynamicResource Redline}" Width="9" Height="9"/>
							<Path Fill="{DynamicResource Redline}" Stretch="Fill" Stroke="{DynamicResource Redline}" VerticalAlignment="Top" Height="7" Data="M11.5,-0.5 L11.5,3.5 14.5,3.5 11.5,5.5 8.5,3.5 11.5,3.5 11.5,-0.5 z" StrokeLineJoin="Round" HorizontalAlignment="Center" Width="7"/>
							<Path Fill="{DynamicResource Redline}" Stretch="Fill" Stroke="{DynamicResource Redline}" StrokeLineJoin="Round" HorizontalAlignment="Right" Width="7" Data="M17.5,11.5 L19.5,8.5 19.5,11.5 23.5,11.5 23.5,11.5 19.5,11.5 19.5,14.5 z" Height="7" VerticalAlignment="Center"/>
							<Path Fill="{DynamicResource Redline}" Stretch="Fill" Stroke="{DynamicResource Redline}" StrokeLineJoin="Round" VerticalAlignment="Bottom" Height="7" Data="M11.5,6 L11.5,2 14.5,2 11.5,0 8.5,2 11.5,2.0001351 11.5,5.999981 z" Width="7" HorizontalAlignment="Center"/>
							<Path Fill="{DynamicResource Redline}" Stretch="Fill" Stroke="{DynamicResource Redline}" StrokeLineJoin="Round" Margin="0,0,0,0" Data="M8,2.5 L12,2.5 12,-0.5 14,2.5 12,5.5 12,2.5 8,2.5 z" HorizontalAlignment="Left" Width="7" Height="7" VerticalAlignment="Center"/>
						</Grid>
					</Button>
                    <Button VerticalAlignment="Center"x:Name='Spacing' Click='StartStretch' ToolTip="Find the spacing between two screen visuals">
                    </Button>
                    <Button VerticalAlignment="Center"Click='StartStretchEW' ToolTip="Find the spacing between two screen visuals">
                    </Button>
                    <Button VerticalAlignment="Center"Click='StartStretchNS' ToolTip="Find the spacing between two screen visuals">
                    </Button>

                    <Button VerticalAlignment="Center"Click='StartCapture' ToolTip='Capture' x:Name='CaptureButton' Content='C' Width="25" Height="25" Style="{DynamicResource CameraButton}" Margin="0,0,5,0"/>-->
                        <!--<CheckBox x:Name='Bounds' Content='Bounds' Checked='StartBounds' Width='70' Foreground='White'/>
					<CheckBox x:Name='Spacing' Content='Spacing' Checked='StartSpacing' Width='70' Foreground='White'/>-->
                    </StackPanel>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Window>
